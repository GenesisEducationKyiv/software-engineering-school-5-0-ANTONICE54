// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: subscription.proto

package subscription

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Frequency int32

const (
	Frequency_UNSPECIFIED Frequency = 0
	Frequency_DAILY       Frequency = 1
	Frequency_HOURLY      Frequency = 2
)

// Enum value maps for Frequency.
var (
	Frequency_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "DAILY",
		2: "HOURLY",
	}
	Frequency_value = map[string]int32{
		"UNSPECIFIED": 0,
		"DAILY":       1,
		"HOURLY":      2,
	}
)

func (x Frequency) Enum() *Frequency {
	p := new(Frequency)
	*p = x
	return p
}

func (x Frequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Frequency) Descriptor() protoreflect.EnumDescriptor {
	return file_subscription_proto_enumTypes[0].Descriptor()
}

func (Frequency) Type() protoreflect.EnumType {
	return &file_subscription_proto_enumTypes[0]
}

func (x Frequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Frequency.Descriptor instead.
func (Frequency) EnumDescriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{0}
}

type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	City          string                 `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Frequency     Frequency              `protobuf:"varint,3,opt,name=frequency,proto3,enum=Frequency" json:"frequency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_subscription_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SubscribeRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SubscribeRequest) GetFrequency() Frequency {
	if x != nil {
		return x.Frequency
	}
	return Frequency_UNSPECIFIED
}

type GetSubscriptionsByFrequencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Frequency     Frequency              `protobuf:"varint,1,opt,name=frequency,proto3,enum=Frequency" json:"frequency,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     int32                  `protobuf:"varint,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionsByFrequencyRequest) Reset() {
	*x = GetSubscriptionsByFrequencyRequest{}
	mi := &file_subscription_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionsByFrequencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionsByFrequencyRequest) ProtoMessage() {}

func (x *GetSubscriptionsByFrequencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionsByFrequencyRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionsByFrequencyRequest) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{1}
}

func (x *GetSubscriptionsByFrequencyRequest) GetFrequency() Frequency {
	if x != nil {
		return x.Frequency
	}
	return Frequency_UNSPECIFIED
}

func (x *GetSubscriptionsByFrequencyRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetSubscriptionsByFrequencyRequest) GetPageToken() int32 {
	if x != nil {
		return x.PageToken
	}
	return 0
}

type ConfirmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmRequest) Reset() {
	*x = ConfirmRequest{}
	mi := &file_subscription_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmRequest) ProtoMessage() {}

func (x *ConfirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmRequest.ProtoReflect.Descriptor instead.
func (*ConfirmRequest) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{2}
}

func (x *ConfirmRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UnsubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeRequest) Reset() {
	*x = UnsubscribeRequest{}
	mi := &file_subscription_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeRequest) ProtoMessage() {}

func (x *UnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{3}
}

func (x *UnsubscribeRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Subscription struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	City          string                 `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	mi := &file_subscription_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{4}
}

func (x *Subscription) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Subscription) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type GetSubscriptionsByFrequencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subscriptions []*Subscription        `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	NextPageIndex int32                  `protobuf:"varint,2,opt,name=next_page_index,json=nextPageIndex,proto3" json:"next_page_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionsByFrequencyResponse) Reset() {
	*x = GetSubscriptionsByFrequencyResponse{}
	mi := &file_subscription_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionsByFrequencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionsByFrequencyResponse) ProtoMessage() {}

func (x *GetSubscriptionsByFrequencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionsByFrequencyResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionsByFrequencyResponse) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{5}
}

func (x *GetSubscriptionsByFrequencyResponse) GetSubscriptions() []*Subscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

func (x *GetSubscriptionsByFrequencyResponse) GetNextPageIndex() int32 {
	if x != nil {
		return x.NextPageIndex
	}
	return 0
}

var File_subscription_proto protoreflect.FileDescriptor

const file_subscription_proto_rawDesc = "" +
	"\n" +
	"\x12subscription.proto\x1a\x1bgoogle/protobuf/empty.proto\"f\n" +
	"\x10SubscribeRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x12\n" +
	"\x04city\x18\x02 \x01(\tR\x04city\x12(\n" +
	"\tfrequency\x18\x03 \x01(\x0e2\n" +
	".FrequencyR\tfrequency\"\x8a\x01\n" +
	"\"GetSubscriptionsByFrequencyRequest\x12(\n" +
	"\tfrequency\x18\x01 \x01(\x0e2\n" +
	".FrequencyR\tfrequency\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\x05R\tpageToken\"&\n" +
	"\x0eConfirmRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"*\n" +
	"\x12UnsubscribeRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"8\n" +
	"\fSubscription\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x12\n" +
	"\x04city\x18\x03 \x01(\tR\x04city\"\x82\x01\n" +
	"#GetSubscriptionsByFrequencyResponse\x123\n" +
	"\rsubscriptions\x18\x01 \x03(\v2\r.SubscriptionR\rsubscriptions\x12&\n" +
	"\x0fnext_page_index\x18\x02 \x01(\x05R\rnextPageIndex*3\n" +
	"\tFrequency\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\t\n" +
	"\x05DAILY\x10\x01\x12\n" +
	"\n" +
	"\x06HOURLY\x10\x022\xa7\x02\n" +
	"\x13SubscriptionService\x126\n" +
	"\tSubscribe\x12\x11.SubscribeRequest\x1a\x16.google.protobuf.Empty\x122\n" +
	"\aConfirm\x12\x0f.ConfirmRequest\x1a\x16.google.protobuf.Empty\x12:\n" +
	"\vUnsubscribe\x12\x13.UnsubscribeRequest\x1a\x16.google.protobuf.Empty\x12h\n" +
	"\x1bGetSubscriptionsByFrequency\x12#.GetSubscriptionsByFrequencyRequest\x1a$.GetSubscriptionsByFrequencyResponseB\x11Z\x0f./;subscriptionb\x06proto3"

var (
	file_subscription_proto_rawDescOnce sync.Once
	file_subscription_proto_rawDescData []byte
)

func file_subscription_proto_rawDescGZIP() []byte {
	file_subscription_proto_rawDescOnce.Do(func() {
		file_subscription_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_subscription_proto_rawDesc), len(file_subscription_proto_rawDesc)))
	})
	return file_subscription_proto_rawDescData
}

var file_subscription_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_subscription_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_subscription_proto_goTypes = []any{
	(Frequency)(0),                              // 0: Frequency
	(*SubscribeRequest)(nil),                    // 1: SubscribeRequest
	(*GetSubscriptionsByFrequencyRequest)(nil),  // 2: GetSubscriptionsByFrequencyRequest
	(*ConfirmRequest)(nil),                      // 3: ConfirmRequest
	(*UnsubscribeRequest)(nil),                  // 4: UnsubscribeRequest
	(*Subscription)(nil),                        // 5: Subscription
	(*GetSubscriptionsByFrequencyResponse)(nil), // 6: GetSubscriptionsByFrequencyResponse
	(*emptypb.Empty)(nil),                       // 7: google.protobuf.Empty
}
var file_subscription_proto_depIdxs = []int32{
	0, // 0: SubscribeRequest.frequency:type_name -> Frequency
	0, // 1: GetSubscriptionsByFrequencyRequest.frequency:type_name -> Frequency
	5, // 2: GetSubscriptionsByFrequencyResponse.subscriptions:type_name -> Subscription
	1, // 3: SubscriptionService.Subscribe:input_type -> SubscribeRequest
	3, // 4: SubscriptionService.Confirm:input_type -> ConfirmRequest
	4, // 5: SubscriptionService.Unsubscribe:input_type -> UnsubscribeRequest
	2, // 6: SubscriptionService.GetSubscriptionsByFrequency:input_type -> GetSubscriptionsByFrequencyRequest
	7, // 7: SubscriptionService.Subscribe:output_type -> google.protobuf.Empty
	7, // 8: SubscriptionService.Confirm:output_type -> google.protobuf.Empty
	7, // 9: SubscriptionService.Unsubscribe:output_type -> google.protobuf.Empty
	6, // 10: SubscriptionService.GetSubscriptionsByFrequency:output_type -> GetSubscriptionsByFrequencyResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_subscription_proto_init() }
func file_subscription_proto_init() {
	if File_subscription_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_subscription_proto_rawDesc), len(file_subscription_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_subscription_proto_goTypes,
		DependencyIndexes: file_subscription_proto_depIdxs,
		EnumInfos:         file_subscription_proto_enumTypes,
		MessageInfos:      file_subscription_proto_msgTypes,
	}.Build()
	File_subscription_proto = out.File
	file_subscription_proto_goTypes = nil
	file_subscription_proto_depIdxs = nil
}
